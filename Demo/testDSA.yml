---
- name: Install Application
  hosts: local
  gather_facts: false

  #Virtual machine name "use input"
  vars_prompt:
    - name: "vmname"
      prompt: "VM Name:"
      private: no

  #Variables - should be dynamic based on the resources of vcenter hosts
  #and we can use external file as a variable

  vars:
    vcenter_hostname: ''
    vcenter_user: ''
    vcenter_pass: ''
    vmtemplate: ''
    new_port: 22
    inventory_dir: '/etc/ansible/hosts'
    ansible_ssh_user: 'root'
    ansible_ssh_pass: '12345'
    ansible_become_user: 'root'
    ansible_become_pass: '12345'
    ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
    esxi: ''
    datacenter: ''

    
  tasks:
    #- name: Gather facts About the new VM to get the ip
    # local_action:
      # module: vmware_vm_facts
      # hostname: "{{ vcenter_hostname }}"
      # username: "{{ vcenter_user }}"
      # password: "{{ vcenter_pass }}"
      # validate_certs: False
      # register: facts
    
    - name: Add Existing VM to dynamic inventory for further tasks
      add_host:
        #name: "{{ item.name }}"
        name: 10.203.202.161
        group: "{{ item.services }}"
        #ansible_ssh_host: "{{ facts['virtual_machines']['%s' | format(item.name)]['ip_address']  }}"
        ansible_ssh_host: 10.203.202.161
        ansible_ssh_port: "{{ new_port }}"
        inventory_dir: "{{ inventory_dir }}"
        ansible_ssh_user: "{{ ansible_ssh_user }}"
        ansible_ssh_pass: "{{ ansible_ssh_pass }}"
        ansible_become_user: "{{ ansible_become_user }}"
        ansible_become_pass: "{{ ansible_become_pass }}"
        ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
      changed_when: false
      with_items:
        - { name: Centos-KS-AI-Demo, services: dsa }
      register: host

    - debug: var=host

    - debug:
        msg: "{{ hostvars[inventory_hostname] }}"
  
    - name: Download Application
      hosts: dsa
      get_url:
        url: https://files.trendmicro.com/products/deepsecurity/en/11.0/Agent-RedHat_EL7-11.0.0-211.x86_64.zip
        dest: ~/Downloads/Agent-RedHat_EL7-11.0.0-211.x86_64.zip
        mode: 0777
      #delegate_to: dsa
    
    - name: "Check Destination Exists"
      hosts: dsa
      stat:
       path: "{{ item }}"
      register: folder_stats
      with_items:
      - ["/root/Downloads/unarchive"]

    - debug: var=folder_stats.results
    - name: "Create Directory"
      hosts: dsa
      file:
        path: "{{item.item}}"
        state: directory
        mode: 0755
        group: root
        owner: root
      when: item.stat.exists == false
      with_items:
      - "{{ folder_stats.results }}"

    - name: Unarchive the Application
      hosts: dsa
      unarchive:
        src: ~/Downloads/Agent-RedHat_EL7-11.0.0-211.x86_64.zip
        dest: ~/Downloads/unarchive
        remote_src: yes

    - name: Install the -RPM-
      hosts: dsa
      yum:
        name: /root/Downloads/unarchive/Agent-Core-RedHat_EL7-11.0.0-211.x86_64.rpm
        state: latest

    - name: start APP Service
      hosts: dsa
      command: systemctl start ds_agent
      register: result

    -  debug:
        msg: "{{ result }}"

    - name: Verify APP Service
      hosts: dsa
      command: systemctl status ds_agent
      register: result
